0
1
00:00:01,170 --> 00:00:05,340
In this video we're going to learn how to minify our javascript bundle.
1

2
00:00:05,340 --> 00:00:09,350
But first let's understand why we need to minify it.
2

3
00:00:09,360 --> 00:00:14,700
We are striving for the best experience for our customers. We want our websites to load fast.
3

4
00:00:14,850 --> 00:00:19,830
If your customers are using your website on mobile then the website performance is crucial for them.
4

5
00:00:20,400 --> 00:00:25,500
If you make the size of the javascript file smaller than the whole Website will load faster.
5

6
00:00:25,500 --> 00:00:29,160
What's more, it will consume less Internet traffic.
6

7
00:00:29,180 --> 00:00:36,540
Now let's have a look at our current bundle size. Our bundle now is inside dist folder and I will right click
7

8
00:00:36,540 --> 00:00:39,960
on it, and open it in the file manager.
8

9
00:00:40,500 --> 00:00:44,170
And here I can get more information about this file.
9

10
00:00:44,340 --> 00:00:52,070
And here we can see that our file currently consumes 21 kilobytes of disk space.
10

11
00:00:52,260 --> 00:00:56,630
Let's figure out how to make it smaller. In order to make our bundle smaller,
11

12
00:00:56,640 --> 00:01:01,580
I will need to add a special plugin to webpack. This plugin is called TerserPlugin.
12

13
00:01:01,740 --> 00:01:05,360
So let's add TerserPlugin and see if the bundle size changes
13

14
00:01:05,370 --> 00:01:11,760
after that. I will go to the webpack.config.JS file and add a new section there which is called plugins.
14

15
00:01:20,120 --> 00:01:24,010
This is a javascript array. You can put here as many plugins as you want.
15

16
00:01:24,030 --> 00:01:26,220
For now I will put here only one plugin.
16

17
00:01:29,600 --> 00:01:34,010
Pay attention that I am creating a new instance of TerserPlugin here.
17

18
00:01:34,090 --> 00:01:37,350
Now we need to import TerserPlugin at the beginning of the file.
18

19
00:01:47,220 --> 00:01:49,020
Since we are using a new plugin here,
19

20
00:01:49,020 --> 00:01:50,250
We need to install it.
20

21
00:01:50,340 --> 00:01:53,730
So I will go to my terminal and install this plugin.
21

22
00:02:00,320 --> 00:02:02,170
All webpack plugins should be installed
22

23
00:02:02,180 --> 00:02:07,910
with  --save-dev option, to indicate that they are used as development dependencies.
23

24
00:02:07,990 --> 00:02:13,250
Webpack plugin is a development dependency because we need it only during the build process.
24

25
00:02:13,310 --> 00:02:15,420
If we use --save option,
25

26
00:02:15,530 --> 00:02:21,180
without the dev part, then it would be considered a production dependency. Production dependencies are
26

27
00:02:21,180 --> 00:02:24,270
required when we publish our project to production servers.
27

28
00:02:24,290 --> 00:02:27,570
However we usually don't need webpack plugins on production servers.
28

29
00:02:27,590 --> 00:02:33,070
That's why it's a development dependency.
29

30
00:02:33,080 --> 00:02:35,860
Now let's run webpack and check the bundle size one more time.
30

31
00:02:40,830 --> 00:02:41,640
the build is done.
31

32
00:02:41,730 --> 00:02:47,030
Let's go to the editor again and look how many kilobytes our bundle.js file consumes now.
32

33
00:02:48,540 --> 00:02:55,100
So I open it in the file manager, and here I will look again at the information.
33

34
00:02:55,110 --> 00:02:58,200
And here I can see that it now consumes only 7 kilobytes.
34

35
00:02:59,100 --> 00:03:01,200
So we have just made our bundle size smaller.
35

36
00:03:04,580 --> 00:03:10,230
As a side note I would like to mention here that using TerserPlugin is a new way of minifying your javascript bundles.
36

37
00:03:10,250 --> 00:03:15,440
Earlier Webpack was using  Uglifyjsplugin for the same purposes.
37

38
00:03:15,710 --> 00:03:19,150
You can still use Uglifyjsplugin and get the same results.
38

39
00:03:19,280 --> 00:03:22,250
However using TerserPlugin is the recommended way nowadays.
39

40
00:03:22,280 --> 00:03:27,740
You can still see Uglifyjsplugin in the other videos of this course
40

41
00:03:27,860 --> 00:03:29,420
until I update all the lectures.
