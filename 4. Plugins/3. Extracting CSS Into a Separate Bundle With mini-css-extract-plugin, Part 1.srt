0
1
00:00:00,820 --> 00:00:06,010
In this video we're going to learn how to extract our CSS into a separate file.
1

2
00:00:06,010 --> 00:00:08,400
This video consists of two parts.
2

3
00:00:08,410 --> 00:00:15,280
This is part one. Some time ago we learned how to import css inside our JavaScript files.
3

4
00:00:15,370 --> 00:00:19,350
We did it using CSS loader and style loader.
4

5
00:00:19,810 --> 00:00:23,940
As you can see all our styles are inside the style tag, right here.
5

6
00:00:25,000 --> 00:00:29,410
Even though this is fine for development purposes, this is not good for production.
6

7
00:00:32,710 --> 00:00:33,850
Using this approach
7

8
00:00:33,850 --> 00:00:40,940
all our styles are bundled together with our javascript code inside a single file called bundle.js.
8

9
00:00:41,090 --> 00:00:45,850
Styles are dynamically added to the Document Object Model
9

10
00:00:45,850 --> 00:00:53,470
by javascript during runtime. However there is one problem with this approach. Our bundle file will become
10

11
00:00:53,560 --> 00:01:02,000
very big after some time. And big files need more time to load. What we can do here, is extract all our
11

12
00:01:02,000 --> 00:01:07,820
css into a separate file that will be generated alongside our javascript bundle.
12

13
00:01:07,820 --> 00:01:11,790
This way we can have two bundles instead of one.
13

14
00:01:11,930 --> 00:01:14,360
Why is it better than having one bundle?
14

15
00:01:14,510 --> 00:01:20,600
First this will make the size of our javascript bundle much smaller so it will be faster to download.
15

16
00:01:21,080 --> 00:01:27,890
And second this will allow us to load several files in parallel making overall experience even better.
16

17
00:01:28,520 --> 00:01:30,710
Let's do something with our styles.
17

18
00:01:30,770 --> 00:01:34,460
We need to add a new plugin inside our webpack configuration.
18

19
00:01:37,870 --> 00:01:41,640
The name of this plugin is MiniCssExtractPlugin.
19

20
00:01:46,940 --> 00:01:49,850
So I'm going to add a new plugin to the list of plugins.
20

21
00:02:01,280 --> 00:02:18,940
This will extract our css into a separate file. And we can even specify the name of this file.
21

22
00:02:18,970 --> 00:02:26,150
Now we need to modify our rules for CSS and SASS in order to use MiniCssExtractPlugin.
22

23
00:02:26,390 --> 00:02:28,850
First I will change the rule for css.
23

24
00:02:34,470 --> 00:02:36,650
I need to replace style loader
24

25
00:02:36,690 --> 00:02:40,110
with MiniCssExtractPlugin.loader.
25

26
00:02:52,570 --> 00:02:54,070
Now I need to do the same
26

27
00:02:54,160 --> 00:03:05,130
with the sass rule.
27

28
00:03:05,240 --> 00:03:08,970
We also need to import this plugin at the beginning of the file.
28

29
00:03:28,410 --> 00:03:49,500
Since we are using a new plugin here, we need to install it.
29

30
00:03:49,700 --> 00:03:54,320
Now let's run the build process and check if we get something new in the dist folder.
30

31
00:04:02,940 --> 00:04:09,060
As you can see we are having one additional file inside the dist folder and this file is called
31

32
00:04:09,150 --> 00:04:10,630
styles.css.
32

33
00:04:10,650 --> 00:04:14,550
Now we need to include this file inside our html markup.
33

34
00:04:36,440 --> 00:04:38,650
Let's check if everything works in the browser.
34

35
00:04:44,170 --> 00:04:46,500
As you can see our styles work as before.
35

36
00:04:50,200 --> 00:04:50,810
However,
36

37
00:04:50,840 --> 00:04:54,320
now we don't have any styles inside our style tag.
37

38
00:04:54,340 --> 00:04:57,040
Actually there is no style tag at all.
38

39
00:04:57,040 --> 00:05:00,610
Instead we're having these styles inside an external file.
