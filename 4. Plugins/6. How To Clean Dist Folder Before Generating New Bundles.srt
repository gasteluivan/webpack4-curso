0
1
00:00:00,750 --> 00:00:09,070
At the moment our dist folder is quite cluttered, and most of the files inside are redundant.
1

2
00:00:09,090 --> 00:00:12,390
These are the leftovers from the previous builds.
2

3
00:00:12,490 --> 00:00:16,540
That's because the names of our bundles contain md5 hash.
3

4
00:00:16,760 --> 00:00:23,700
This md5 hash is generated based on the contents of the file. Each time you change something inside
4

5
00:00:23,740 --> 00:00:27,480
any file, it's md5 hash changes as well.
5

6
00:00:27,510 --> 00:00:28,440
That's why
6

7
00:00:28,440 --> 00:00:32,200
we are getting new bundles with every code change. In this video
7

8
00:00:32,220 --> 00:00:39,830
We'll see how we can remove old bundles from the dist folder before generating new bundles.
8

9
00:00:39,850 --> 00:00:43,560
I bet you already guessed that webpack has a plugin for that.
9

10
00:00:43,560 --> 00:00:46,500
And you're right.  The name of this plugin is 
10

11
00:00:46,500 --> 00:00:47,520
CleanWebpackPlugin.
11

12
00:00:47,820 --> 00:00:50,640
So let's add this plugin to the plugins array.
12

13
00:01:04,970 --> 00:01:12,920
Each time you run the build process CleanWebpackPlugin will clean the output.path folder.
13

14
00:01:13,080 --> 00:01:15,380
This is the output.path folder.
14

15
00:01:15,420 --> 00:01:18,830
In our case this is the dist folder.
15

16
00:01:19,680 --> 00:01:27,180
But what do I mean by cleaning? Every time we run webpack, CleanWebpackPlugin simply removes all the files
16

17
00:01:27,270 --> 00:01:28,530
from this folder.
17

18
00:01:28,770 --> 00:01:34,500
This way webpack ensures that it has absolutely clean folder before putting anyone else to it.
18

19
00:01:37,790 --> 00:01:42,320
We also need to import CleanWebpackPlugin in order to be able to use it.
19

20
00:01:58,540 --> 00:02:01,850
Since we are using a new plugin here we need to install it.
20

21
00:02:17,730 --> 00:02:23,220
As you remember our dist folder currently contains 5 different files inside.
21

22
00:02:23,280 --> 00:02:25,680
So now let's run the build process.
22

23
00:02:32,550 --> 00:02:35,480
And now the dist folder contains only two files.
23

24
00:02:35,520 --> 00:02:39,960
That's because CleanWebpackPlugin has removed other files from the dist folder.
24

25
00:02:43,020 --> 00:02:43,560
By the way
25

26
00:02:43,560 --> 00:02:46,860
it's possible to clean multiple folders with this plugin.
26

27
00:02:46,950 --> 00:02:52,770
You just need to provide a couple of options when instantiateing this plugin in the plugins array.
27

28
00:02:52,770 --> 00:02:59,160
Let's imagine we have one more folder generated by some other tool where you store some additional css
28

29
00:02:59,250 --> 00:03:03,220
files. I will create this folder now.
29

30
00:03:06,560 --> 00:03:10,780
And inside the build folder we'll have one css file,
30

31
00:03:14,770 --> 00:03:16,560
and one subfolder
31

32
00:03:19,970 --> 00:03:21,380
with another css file.
32

33
00:03:27,610 --> 00:03:30,860
Lets configure webpack to clean this folder as well.
33

34
00:03:47,670 --> 00:03:54,070
Clean once before build patterns removes old files before webpack generates the new files.
34

35
00:03:54,070 --> 00:04:00,690
You can specify an array of the file patterns which you want to remove. All patterns are relative to the webpack
35

36
00:04:01,060 --> 00:04:04,120
output.path   directory. In our case
36

37
00:04:04,120 --> 00:04:05,560
this is the dist folder.
37

38
00:04:12,310 --> 00:04:18,070
This means to remove all the files together with sub directories inside the dist folder
38

39
00:04:18,070 --> 00:04:21,000
no matter how many nesting levels there are.
39

40
00:04:21,040 --> 00:04:22,920
This is how clean once before
40

41
00:04:22,930 --> 00:04:24,310
build patterns looks
41

42
00:04:24,310 --> 00:04:30,950
by default, if you don't modify it. However if you want to remove the files outside of the dist folder
42

43
00:04:30,980 --> 00:04:34,370
you should specify an absolute path to the file patterns.
43

44
00:04:52,410 --> 00:04:54,710
This will remove all the files together
44

45
00:04:54,790 --> 00:05:00,260
with  subfolders inside the build folder. Let's check how it works.
45

46
00:05:06,780 --> 00:05:08,160
I'll go to the text editor
46

47
00:05:11,840 --> 00:05:15,620
And now you can see that the build folder is empty.
47

48
00:05:15,620 --> 00:05:21,710
This means that webpack removed all the files together with subdirectories from this folder.
48

49
00:05:21,710 --> 00:05:28,190
So in this video we learned how to use CleanWebpackPlugin in order to keep the folder nice and clean.
